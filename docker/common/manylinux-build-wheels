#!/bin/bash
set -e

export LD_LIBRARY_PATH="/usr/local/lib64"  # For whatever reason, this has to be set manually

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
. "${SCRIPT_DIR}/dependency_versions"

CODE_DIR="${1:-$(pwd)}"

# Log python versions
echo "Found the following Python versions:"
for PYBIN in /opt/python/*/bin; do
  if [[ "${PYBIN}" =~ ${PYBIN_SUPPORTED_VERSIONS} ]]; then
    echo "${PYBIN}" | cut -d / -f 4
  fi
done

# Build python wheels
WHEELS_DIR="$(pwd)/wheels"
mkdir -p "${WHEELS_DIR}"
mkdir -p dist
mkdir -p dist_full

# Compile wheels
for PYBIN in /opt/python/*/bin; do
  PYBIN_NAME="$(basename "$(dirname "$PYBIN")")"
  if [[ "${PYBIN}" =~ ${PYBIN_SUPPORTED_VERSIONS} ]]; then
    (mkdir -p "$PYBIN_NAME" && cd "$PYBIN_NAME" && "${PYBIN}/pip" wheel "$CODE_DIR" -w "${WHEELS_DIR}")
  fi
done

# Bundle external shared libraries into the wheels
for whl in wheels/*.whl; do
  if [[ "$whl" =~ wheels/franky_panda-.*\.whl ]]; then
    auditwheel repair "$whl" -w dist_full/
  else
    cp "$whl" dist_full/
  fi
done

# Install packages and test
for PYBIN in /opt/python/*/bin/; do
  if [[ "${PYBIN}" =~ ${PYBIN_SUPPORTED_VERSIONS} ]]; then
    "${PYBIN}/pip" install franky-panda --no-index -f dist_full
  fi
done

cp dist_full/franky_panda-*.whl dist/
echo "Built the following wheels:"
ls dist

mkdir -p output
LIBFRANKA_VERSION="${LIBFRANKA_VERSION:-${LIBFRANKA_DEFAULT_VERSION}}"
zip -r "output/libfranka_${LIBFRANKA_VERSION//./-}_wheels.zip" dist/